(()=>{var p=class{constructor(){this.map=null,this.markers=[],this.flightPath=null,this.imageData=[],this.errorData=[],this.sessionName="",this.kmlData=null,this.isProcessing=!1,this.progressEls={container:document.getElementById("progress"),fill:document.getElementById("progress-fill"),text:document.getElementById("progress-text")},this.myMapsControls={button:document.getElementById("open-mymaps"),hint:document.getElementById("mymaps-hint")},this.privacyNotice={modal:document.getElementById("privacy-modal"),acknowledgeBtn:document.getElementById("privacy-ack-btn")},this.themeState={toggleButton:document.getElementById("theme-toggle"),storedPreference:null},this.themeToggleBound=!1,this.mapboxControls={container:document.getElementById("mapbox-config"),input:document.getElementById("mapbox-token-input"),applyButton:document.getElementById("mapbox-token-apply"),clearButton:document.getElementById("mapbox-token-clear"),status:document.getElementById("mapbox-token-status")},this.mapIntroCard=document.getElementById("map-intro-card"),this.mapAboutCard=document.getElementById("map-about-card"),this.mapConfig=null,this.baseLayer=null,this.activeBaseProvider=null,this.defaultMapView={center:[39,-98],zoom:4},this.mapBoundsBufferFeet=2e3,this.dataBounds=null,this.bufferedDataBounds=null,this.serverMapboxDefaults=null,this.userMapboxToken=null,this.mapboxControlsBound=!1,this.initializeApp()}async initializeApp(){this.setupEventListeners(),await this.loadMapConfig(),this.initThemeToggle(),this.initMapboxTokenControls(),this.initializeMap(),this.toggleMyMapsGuidance(!1),this.initPrivacyNotice(),document.getElementById("load-session").style.display="block"}async loadMapConfig(){try{let e=await fetch("/map-config",{cache:"no-store"});if(!e.ok)throw new Error(`Tile config request failed with status ${e.status}`);this.mapConfig=await e.json()}catch(e){console.warn("Falling back to default MBTiles configuration:",e),this.mapConfig={provider:"mbtiles",mbtiles:{url:"/tiles/{z}/{x}/{y}",minZoom:1,maxZoom:17,attribution:"Metainfo Plotter"}}}this.serverMapboxDefaults=this.mapConfig?.mapbox?{token:this.mapConfig.mapbox.token||"",style:this.mapConfig.mapbox.style||"mapbox/satellite-streets-v12",minZoom:Number.isFinite(this.mapConfig.mapbox.minZoom)?this.mapConfig.mapbox.minZoom:15,maxZoom:Number.isFinite(this.mapConfig.mapbox.maxZoom)?this.mapConfig.mapbox.maxZoom:18,attribution:this.mapConfig.mapbox.attribution||"Mapbox; OpenStreetMap contributors"}:null;let t=this.readStoredMapboxToken();t?(this.ensureMapboxConfigDefaults(),this.mapConfig.mapbox.token=t,this.mapConfig.provider="mapbox",this.userMapboxToken=t):this.userMapboxToken=null,this.mapConfig?.provider||(this.mapConfig={...this.mapConfig,provider:this.mapConfig?.mapbox&&(this.mapConfig.mapbox.token||this.serverMapboxDefaults?.token)?"mapbox":"mbtiles"})}initializeMap(){let t=this.mapConfig?.mbtiles||{};this.map=L.map("map",{center:this.defaultMapView.center,zoom:this.defaultMapView.zoom,minZoom:t.minZoom??1,maxZoom:t.maxZoom??18}),this.map.options.maxBoundsViscosity=0,this.useFallbackBasemap()}useFallbackBasemap(){if(!this.map)return;let t=this.mapConfig?.mbtiles;if(!t){this.baseLayer&&(this.map.removeLayer(this.baseLayer),this.baseLayer=null),this.activeBaseProvider=null;return}let e=L.tileLayer(t.url||"/tiles/{z}/{x}/{y}",{minZoom:t.minZoom??1,maxZoom:t.maxZoom??17,attribution:t.attribution||"Metainfo Plotter"});this.swapBaseLayer(e,"mbtiles"),this.map.setMinZoom(e.options.minZoom??1),this.map.setMaxZoom(e.options.maxZoom??18),this.map.setMaxBounds(null),this.map.options.maxBoundsViscosity=0}ensureMapboxConfigDefaults(){if(this.mapConfig||(this.mapConfig={}),this.mapConfig.mapbox){let t=this.mapConfig.mapbox;t.style||(t.style="mapbox/satellite-streets-v12"),Number.isFinite(t.minZoom)||(t.minZoom=15),Number.isFinite(t.maxZoom)||(t.maxZoom=18),t.attribution||(t.attribution="Mapbox; OpenStreetMap contributors")}else{let t=this.serverMapboxDefaults||{};this.mapConfig.mapbox={token:t.token||"",style:t.style||"mapbox/satellite-streets-v12",minZoom:Number.isFinite(t.minZoom)?t.minZoom:15,maxZoom:Number.isFinite(t.maxZoom)?t.maxZoom:18,attribution:t.attribution||"Mapbox; OpenStreetMap contributors"}}}readStoredMapboxToken(){try{return typeof window>"u"||!window.localStorage?null:window.localStorage.getItem("metainfo-mapbox-token")||null}catch(t){return console.warn("Unable to read stored Mapbox token:",t.message),null}}writeStoredMapboxToken(t){try{if(typeof window>"u"||!window.localStorage)return;t?window.localStorage.setItem("metainfo-mapbox-token",t):window.localStorage.removeItem("metainfo-mapbox-token")}catch(e){console.warn("Unable to persist Mapbox token:",e.message)}}initMapboxTokenControls(){let t=this.mapboxControls;if(!(!t||!t.container)){if(t.input&&(t.input.value=this.userMapboxToken||""),this.mapboxControlsBound){this.updateMapboxTokenStatus();return}t.applyButton?.addEventListener("click",()=>{let e=t.input?.value||"";this.setMapboxToken(e,{persist:!0,announce:!0})}),t.clearButton?.addEventListener("click",()=>{this.clearMapboxToken(!0)}),t.input?.addEventListener("keydown",e=>{if(e.key==="Enter"){e.preventDefault();let o=t.input?.value||"";this.setMapboxToken(o,{persist:!0,announce:!0})}}),this.mapboxControlsBound=!0,this.updateMapboxTokenStatus()}}hideMapIntroCard(){this.mapIntroCard&&(this.mapIntroCard.style.display="none"),this.mapAboutCard&&(this.mapAboutCard.style.display="none")}showMapIntroCard(){this.mapIntroCard&&(this.mapIntroCard.style.display="block"),this.mapAboutCard&&(this.mapAboutCard.style.display="block")}updateMapboxTokenStatus(t=null){let e=this.mapboxControls?.status;if(!e)return;if(t){e.textContent=t;return}let o=this.getMapboxSettings();this.mapConfig?.provider==="mapbox"&&o.token?e.textContent=this.userMapboxToken?"Using browser-supplied Mapbox token. Tiles load once imagery is processed.":"Using server-provided Mapbox token. Tiles load once imagery is processed.":e.textContent="No Mapbox token active. Offline MBTiles will be used."}setMapboxToken(t,e={}){let{persist:o=!1,announce:a=!1}=e,s=typeof t=="string"?t.trim():"",n=this.imageData.length>0,i=n?this.imageData.map(r=>[r.latitude,r.longitude]):null,l;return this.mapboxControls?.input&&(this.mapboxControls.input.value=s),s?(this.ensureMapboxConfigDefaults(),this.mapConfig.mapbox.token=s,this.mapConfig.provider="mapbox",this.userMapboxToken=s,o&&this.writeStoredMapboxToken(s),l="Mapbox token saved. Hybrid tiles will load once imagery is processed."):(o&&this.writeStoredMapboxToken(null),this.userMapboxToken=null,this.serverMapboxDefaults&&this.serverMapboxDefaults.token?(this.ensureMapboxConfigDefaults(),this.mapConfig.mapbox.token=this.serverMapboxDefaults.token,this.mapConfig.mapbox.style=this.serverMapboxDefaults.style,this.mapConfig.mapbox.minZoom=this.serverMapboxDefaults.minZoom,this.mapConfig.mapbox.maxZoom=this.serverMapboxDefaults.maxZoom,this.mapConfig.mapbox.attribution=this.serverMapboxDefaults.attribution,this.mapConfig.provider="mapbox",l="Reverted to server-provided Mapbox token."):(this.mapConfig?.mapbox&&(this.mapConfig.mapbox.token=""),this.mapConfig.provider="mbtiles",l="Cleared Mapbox token. Offline tiles will remain active.")),a?this.updateMapboxTokenStatus(l):this.updateMapboxTokenStatus(),n&&Array.isArray(i)&&i.length>0?this.ensureBasemapForBounds(i):!s&&(!this.mapConfig.mapbox||!this.mapConfig.mapbox.token)&&this.activeBaseProvider!=="mbtiles"&&this.useFallbackBasemap(),s.length>0}clearMapboxToken(t=!1){this.setMapboxToken("",{persist:t,announce:!0}),this.mapboxControls?.input&&(this.mapboxControls.input.value="")}swapBaseLayer(t,e){this.map&&(this.baseLayer&&this.map.removeLayer(this.baseLayer),this.baseLayer=t||null,this.baseLayer&&this.baseLayer.addTo(this.map),this.activeBaseProvider=e||null)}getMapboxSettings(){let t=this.mapConfig?.mapbox||{};return{token:t.token||"",style:t.style||"mapbox/satellite-streets-v12",minZoom:Number.isFinite(t.minZoom)?t.minZoom:16,maxZoom:Number.isFinite(t.maxZoom)?t.maxZoom:18,attribution:t.attribution||"Mapbox; OpenStreetMap contributors"}}activateMapboxBasemap(t){let e=this.getMapboxSettings();if(!e.token){console.warn("Mapbox token missing, staying on MBTiles fallback."),this.useFallbackBasemap();return}let o=`https://api.mapbox.com/styles/v1/${e.style}/tiles/512/{z}/{x}/{y}@2x?access_token=${encodeURIComponent(e.token)}`,a=L.tileLayer(o,{tileSize:512,zoomOffset:-1,minZoom:e.minZoom,maxZoom:e.maxZoom,maxNativeZoom:e.maxZoom,noWrap:!0,bounds:t,attribution:e.attribution});a.on("tileerror",()=>{this.activeBaseProvider==="mapbox"&&(console.warn("Mapbox tile load failed, reverting to MBTiles fallback."),this.useFallbackBasemap())}),this.swapBaseLayer(a,"mapbox"),this.map.setMinZoom(e.minZoom),this.map.setMaxZoom(e.maxZoom),t&&this.map.setMaxBounds(t),this.map.options.maxBoundsViscosity=1}getBufferedBounds(t){if(!t||!t.isValid())return t;let e=this.mapBoundsBufferFeet;if(!e||e<=0)return t;let a=e*.3048,s=a/111320,n=t.getCenter().lat*(Math.PI/180),i=Math.max(Math.cos(n),.01),l=a/(111320*i);return L.latLngBounds([t.getSouth()-s,t.getWest()-l],[t.getNorth()+s,t.getEast()+l])}ensureBasemapForBounds(t){if(!this.map||!Array.isArray(t)||t.length===0)return;let e=L.latLngBounds(t);if(!e.isValid())return;let o=this.getBufferedBounds(e);this.dataBounds=e,this.bufferedDataBounds=o;let a=this.getMapboxSettings();if(this.mapConfig?.provider==="mapbox"&&this.mapConfig.mapbox&&a.token){this.activeBaseProvider!=="mapbox"?this.activateMapboxBasemap(o):o&&(this.map.setMaxBounds(o),this.map.options.maxBoundsViscosity=1,this.map.setMinZoom(a.minZoom),this.map.setMaxZoom(a.maxZoom)),o?this.map.fitBounds(o,{padding:[50,50]}):this.map.fitBounds(e,{padding:[50,50]});return}this.activeBaseProvider!=="mbtiles"&&this.useFallbackBasemap(),this.map.setMaxBounds(null),this.map.options.maxBoundsViscosity=0;let s=o?.isValid?.()?o:e;this.map.fitBounds(s,{padding:[50,50]})}setupEventListeners(){document.getElementById("start-session").addEventListener("click",()=>this.startNewSession()),document.getElementById("load-kml-btn").addEventListener("click",()=>{document.getElementById("kml-input").click()}),document.getElementById("kml-input").addEventListener("change",a=>this.loadKMLSession(a));let t=document.getElementById("drop-zone"),e=document.getElementById("file-input"),o=document.getElementById("folder-input");t.addEventListener("click",()=>e.click()),t.addEventListener("dragover",a=>{a.preventDefault(),t.classList.add("dragover")}),t.addEventListener("dragleave",()=>{t.classList.remove("dragover")}),t.addEventListener("drop",a=>{a.preventDefault(),t.classList.remove("dragover"),this.handleFiles(a.dataTransfer.files)}),e.addEventListener("change",a=>{this.handleFiles(a.target.files),a.target.value=""}),document.getElementById("select-folder").addEventListener("click",()=>o.click()),o.addEventListener("change",a=>{this.handleFiles(a.target.files),a.target.value=""}),document.getElementById("add-more-btn").addEventListener("click",()=>{document.getElementById("upload-section").style.display="block",document.getElementById("controls").style.display="none"}),document.getElementById("done-btn").addEventListener("click",()=>{this.generateKML(),this.collapseHeroOverlay()}),document.getElementById("download-kml").addEventListener("click",()=>this.downloadKML()),document.getElementById("open-mymaps").addEventListener("click",()=>this.openGoogleMyMaps()),document.getElementById("view-errors").addEventListener("click",()=>this.showErrorReport()),document.querySelector(".close").addEventListener("click",()=>{document.getElementById("error-modal").style.display="none"}),document.getElementById("download-report").addEventListener("click",()=>this.downloadErrorReport()),document.getElementById("new-session-btn").addEventListener("click",()=>this.startNewSessionFromControls())}startNewSession(){let t=document.getElementById("location-name").value.trim();if(!t){alert("Please enter a location name");return}this.hideMapIntroCard(),this.sessionName=t,document.getElementById("session-section").style.display="none",document.getElementById("upload-section").style.display="block",document.getElementById("stats").style.display="block"}startNewSessionFromControls(){this.imageData.length>0&&!confirm("Are you sure you want to start a new session? All current data will be lost.")||(this.clearSession(),document.getElementById("session-section").style.display="block",document.getElementById("upload-section").style.display="none",document.getElementById("stats").style.display="none",document.getElementById("controls").style.display="none",document.getElementById("download-kml").style.display="none",document.getElementById("done-btn").style.display="block",document.getElementById("view-errors").style.display="none",document.getElementById("location-name").value="",document.getElementById("load-session").style.display="block")}clearSession(){this.markers.forEach(t=>this.map.removeLayer(t)),this.markers=[],this.flightPath&&(this.map.removeLayer(this.flightPath),this.flightPath=null),this.imageData=[],this.errorData=[],this.sessionName="",this.kmlData=null,this.toggleMyMapsGuidance(!1),this.initThemeToggle(),this.updateStats(),this.dataBounds=null,this.bufferedDataBounds=null,this.map.setMaxBounds(null),this.map.options.maxBoundsViscosity=0,this.useFallbackBasemap(),this.map.setView(this.defaultMapView.center,this.defaultMapView.zoom),this.showMapIntroCard(),this.setProcessingState(!1)}async loadKMLSession(t){let e=t.target.files[0];if(e){this.hideMapIntroCard();try{let o;if(e.name.endsWith(".kmz")){let l=await JSZip.loadAsync(e),r=Object.keys(l.files).find(m=>m.endsWith(".kml"));if(!r){alert("No KML file found in KMZ archive");return}o=await l.files[r].async("text")}else o=await e.text();let s=new DOMParser().parseFromString(o,"text/xml"),n=s.querySelector("Document > name");this.sessionName=n?n.textContent:"Loaded Session";let i=s.querySelectorAll("Placemark");this.imageData=[],i.forEach(l=>{let r=l.querySelector("coordinates")?.textContent.trim();if(!r)return;let m=r.split(",");if(m.length<2)return;let c=l.querySelector("name")?.textContent||"Image",d=l.querySelector("TimeStamp when")?.textContent;this.imageData.push({filename:c,longitude:parseFloat(m[0]),latitude:parseFloat(m[1]),altitude:m[2]?parseFloat(m[2]):null,timestamp:d||null})}),this.updateMapWithData(),document.getElementById("session-section").style.display="none",document.getElementById("upload-section").style.display="block",document.getElementById("stats").style.display="block",document.getElementById("controls").style.display="block",document.getElementById("done-btn").style.display="none",document.getElementById("download-kml").style.display="block",document.getElementById("view-errors").style.display=this.errorData.length>0?"block":"none",this.kmlData=this.imageData.length>0?this.buildKmlDocument(this.sessionName,this.imageData):null,this.toggleMyMapsGuidance(this.kmlData!==null),this.updateStats()}catch(o){console.error("Error loading KML:",o),alert("Error loading KML/KMZ file: "+o.message)}finally{t.target.value=""}}}async handleFiles(t){if(this.isProcessing)return;let e=Array.from(t).filter(a=>a.name.toLowerCase().endsWith(".jpg")||a.name.toLowerCase().endsWith(".jpeg"));if(e.length===0){alert("No JPG images found");return}this.hideMapIntroCard(),this.kmlData=null,this.toggleMyMapsGuidance(!1),this.initThemeToggle(),this.setProcessingState(!0,e.length),document.getElementById("upload-section").style.display="none";let o=0;for(let a of e){try{let s=await this.extractExifFromFile(a);s.success?this.imageData.push(s.data):this.errorData.push({filename:a.name,error:s.reason,details:s.details})}catch(s){this.errorData.push({filename:a.name,error:"Failed to read EXIF data",details:s.message})}o+=1,this.updateProgress(o,e.length)}this.sortImageData(),this.updateMapWithData(),this.updateStats(),document.getElementById("controls").style.display="block",document.getElementById("upload-section").style.display="none",document.getElementById("done-btn").style.display=this.imageData.length>0?"block":"none",document.getElementById("view-errors").style.display=this.errorData.length>0?"block":"none",this.setProcessingState(!1)}initThemeToggle(){let t=this.themeState;if(!t||!t.toggleButton)return;let e=s=>{document.body.classList.toggle("light-theme",s==="light"),t.toggleButton.textContent=s==="light"?"Switch to Dark":"Switch to Light",t.toggleButton.classList.toggle("primary-btn",s==="light"),t.toggleButton.classList.toggle("secondary-btn",s!=="light")},a=(()=>{try{return window.localStorage?.getItem("metainfo-theme")}catch(s){return console.warn("Unable to read stored theme:",s.message),null}})()==="light"?"light":"dark";e(a),this.themeToggleBound||(t.toggleButton.addEventListener("click",()=>{let s=document.body.classList.contains("light-theme")?"dark":"light";e(s);try{window.localStorage?.setItem("metainfo-theme",s)}catch(n){console.warn("Unable to persist theme:",n.message)}}),this.themeToggleBound=!0)}collapseHeroOverlay(){let t=document.getElementById("map-hero");t&&t.classList.add("collapsed")}initPrivacyNotice(){let t=this.privacyNotice;if(!t||!t.modal||!t.acknowledgeBtn)return;let e=()=>{t.modal.style.display="none";try{window.localStorage?.setItem("metainfo-privacy-ack","1")}catch(a){console.warn("Unable to persist privacy acknowledgment:",a.message)}},o=(()=>{try{return window.localStorage?.getItem("metainfo-privacy-ack")==="1"}catch(a){return console.warn("Unable to read privacy acknowledgment:",a.message),!1}})();this.privacyNoticeBound||(t.acknowledgeBtn.addEventListener("click",e),t.modal.addEventListener("click",a=>{a.target===t.modal&&e()}),this.privacyNoticeBound=!0),t.modal.style.display=o?"none":"flex"}async extractExifFromFile(t){let e=await t.arrayBuffer(),o=await exifr.parse(e,{gps:!0});return!o||typeof o.latitude!="number"||typeof o.longitude!="number"?{success:!1,reason:"No GPS data found",details:"Image does not contain GPS metadata"}:Math.abs(o.latitude)>90||Math.abs(o.longitude)>180?{success:!1,reason:"Invalid GPS coordinates",details:`Lat: ${o.latitude}, Lon: ${o.longitude}`}:{success:!0,data:{filename:t.name,latitude:o.latitude,longitude:o.longitude,altitude:o.GPSAltitude||o.altitude||null,timestamp:o.DateTimeOriginal||o.CreateDate||null,make:o.Make||null,model:o.Model||null}}}toggleMyMapsGuidance(t){let e=this.myMapsControls;!e||!e.button||!e.hint||(e.button.style.display=t?"block":"none",e.hint.style.display=t?"block":"none")}openGoogleMyMaps(){if(!this.kmlData){alert("Generate a KML before opening Google My Maps.");return}this.downloadKML(),window.open("https://www.google.com/maps/d/","_blank","noopener")}setProcessingState(t,e=0){this.isProcessing=t,t?(this.progressEls.container.style.display="block",this.updateProgress(0,e)):(this.progressEls.container.style.display="none",this.progressEls.fill.style.width="0%",this.progressEls.text.textContent="0 / 0")}updateProgress(t,e){if(e===0){this.progressEls.fill.style.width="0%",this.progressEls.text.textContent="0 / 0";return}let o=Math.round(t/e*100);this.progressEls.fill.style.width=`${o}%`,this.progressEls.text.textContent=`${t} / ${e}`}sortImageData(){this.imageData.sort((t,e)=>t.timestamp&&e.timestamp?new Date(t.timestamp)-new Date(e.timestamp):0)}updateMapWithData(){if(this.markers.forEach(o=>this.map.removeLayer(o)),this.markers=[],this.flightPath&&(this.map.removeLayer(this.flightPath),this.flightPath=null),this.imageData.length===0)return;let t=[],e=[];this.imageData.forEach(o=>{let a=L.circleMarker([o.latitude,o.longitude],{radius:6,fillColor:"#00ff00",color:"#000",weight:1,opacity:1,fillOpacity:.8}).addTo(this.map);a.on("click",()=>{let s=document.getElementById("coord-popup"),n=[`Lat: ${o.latitude.toFixed(6)}`,`Lon: ${o.longitude.toFixed(6)}`];typeof o.altitude=="number"&&n.push(`Alt: ${o.altitude.toFixed(1)}m`),document.getElementById("coord-text").innerHTML=n.join("<br>");let i=this.map.latLngToContainerPoint([o.latitude,o.longitude]);s.style.left=`${i.x}px`,s.style.top=`${i.y-40}px`,s.style.display="block",setTimeout(()=>{s.style.display="none"},3e3)}),this.markers.push(a),t.push([o.latitude,o.longitude]),e.push([o.latitude,o.longitude])}),e.length>1&&(this.flightPath=L.polyline(e,{color:"#0088ff",weight:2,opacity:.8}).addTo(this.map)),t.length>0&&this.ensureBasemapForBounds(t)}updateStats(){document.getElementById("image-count").textContent=this.imageData.length+this.errorData.length,document.getElementById("valid-count").textContent=this.imageData.length,document.getElementById("error-count").textContent=this.errorData.length}generateKML(){if(this.imageData.length===0){alert("No GPS data to export");return}try{this.kmlData=this.buildKmlDocument(this.sessionName,this.imageData),document.getElementById("done-btn").style.display="none",document.getElementById("download-kml").style.display="block",this.toggleMyMapsGuidance(!0)}catch(t){console.error("Error generating KML:",t),alert("Error generating KML: "+t.message)}}buildKmlDocument(t,e){let o=i=>i==null?"":String(i).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"),a=o(t||"Session"),s=e.map((i,l)=>{let r=[`File: ${o(i.filename)}`,`Lat: ${i.latitude.toFixed(6)}`,`Lon: ${i.longitude.toFixed(6)}`];typeof i.altitude=="number"&&r.push(`Alt: ${i.altitude.toFixed(1)}m`);let m="";if(i.timestamp){let d=new Date(i.timestamp).toISOString();r.push(`Time: ${o(d)}`),m=`<TimeStamp><when>${d}</when></TimeStamp>`}return`      <Placemark>
        <name></name>
        <description>${o(r.join("\\n"))}</description>
        <styleUrl>#imagePoint</styleUrl>
        <Point>
          <coordinates>${i.longitude},${i.latitude},${i.altitude||0}</coordinates>
        </Point>
        ${m}
      </Placemark>`}).join("\\n");return`<?xml version="1.0" encoding="UTF-8"?>
<kml xmlns="http://www.opengis.net/kml/2.2">
  <Document>
    <name>${a}</name>
    <Style id="imagePoint">
      <IconStyle>
        <color>ff00ff00</color>
        <scale>0.8</scale>
        <Icon>
          <href>http://maps.google.com/mapfiles/kml/shapes/camera.png</href>
        </Icon>
      </IconStyle>
    </Style>
    <Style id="flightPath">
      <LineStyle>
        <color>ff0088ff</color>
        <width>2</width>
      </LineStyle>
    </Style> -->
    <Folder>
      <name>Image Locations</name>
${s}
    </Folder>
  </Document>
</kml>`}downloadKML(){if(!this.kmlData)return;let t=new Blob([this.kmlData],{type:"application/vnd.google-earth.kml+xml"}),e=URL.createObjectURL(t),o=document.createElement("a");o.href=e,o.download=`${(this.sessionName||"session").replace(/[^a-z0-9]/gi,"_")}.kml`,o.click(),URL.revokeObjectURL(e)}showErrorReport(){if(this.errorData.length===0)return;let t=`
            <table>
                <thead>
                    <tr>
                        <th>Filename</th>
                        <th>Error Type</th>
                        <th>Details</th>
                    </tr>
                </thead>
                <tbody>
        `;this.errorData.forEach(e=>{t+=`
                <tr>
                    <td>${this.escapeHtml(e.filename)}</td>
                    <td>${this.escapeHtml(e.error)}</td>
                    <td>${this.escapeHtml(e.details)}</td>
                </tr>
            `}),t+="</tbody></table>",document.getElementById("error-table-container").innerHTML=t,document.getElementById("error-modal").style.display="flex"}downloadErrorReport(){if(this.errorData.length===0)return;let t=n=>this.escapeHtml(n),e=`
<!DOCTYPE html>
<html>
<head>
    <title>Error Report - ${t(this.sessionName||"Session")}</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        h1 { color: #d32f2f; }
        table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        th, td { padding: 10px; text-align: left; border: 1px solid #ddd; }
        th { background-color: #f2f2f2; }
        .summary { background: #fff3e0; padding: 15px; border-radius: 5px; margin-bottom: 20px; }
    </style>
</head>
<body>
    <h1>GPS Metadata Error Report</h1>
    <div class="summary">
        <p><strong>Location:</strong> ${t(this.sessionName||"Session")}</p>
        <p><strong>Date:</strong> ${t(new Date().toLocaleString())}</p>
        <p><strong>Total Errors:</strong> ${this.errorData.length}</p>
    </div>
    <table>
        <thead>
            <tr>
                <th>Filename</th>
                <th>Error Type</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
`;this.errorData.forEach(n=>{e+=`
            <tr>
                <td>${t(n.filename)}</td>
                <td>${t(n.error)}</td>
                <td>${t(n.details)}</td>
            </tr>
`}),e+=`
        </tbody>
    </table>
</body>
</html>
`;let o=new Blob([e],{type:"text/html"}),a=URL.createObjectURL(o),s=document.createElement("a");s.href=a,s.download=`error_report_${(this.sessionName||"session").replace(/[^a-z0-9]/gi,"_")}.html`,s.click(),URL.revokeObjectURL(a)}escapeHtml(t){return t==null?"":String(t).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}};document.addEventListener("DOMContentLoaded",()=>{if(!window.exifr){alert("Failed to load EXIF reader. Please check your network connection.");return}new p});})();
